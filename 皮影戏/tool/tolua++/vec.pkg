//////////////////////////////////////////////////////////////////////////////
//
//  --- vec.h ---
//  定义向量类(vec2,vec3和vec4)
//////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////
//
//  vec2.h - 2D vector
//

struct vec2 {

    float  x;
    float  y;

    //
    //  --- Constructors and Destructors ---
    //

    vec2( float s = float(0.0) );

    vec2( float x, float y );

    vec2( const vec2& v );

};

//----------------------------------------------------------------------------
//
//  Non-class vec2 Methods
//


float dot( const vec2& u, const vec2& v );

float length( const vec2& v );

vec2 normalize( const vec2& v );

//////////////////////////////////////////////////////////////////////////////
//
//  vec3.h - 3D vector
//
//////////////////////////////////////////////////////////////////////////////

struct vec3 {

    float  x;
    float  y;
    float  z;

    //
    //  --- Constructors and Destructors ---
    //

    vec3( float s = float(0.0) );

    vec3( float x, float y, float z ) ;

    vec3( const vec3& v );

    vec3( const vec2& v, const float f ) ;
};

//----------------------------------------------------------------------------
//
//  Non-class vec3 Methods
//

float dot( const vec3& u, const vec3& v );

float length( const vec3& v ) ;

vec3 normalize( const vec3& v ) ;

vec3 cross(const vec3& a, const vec3& b );

//////////////////////////////////////////////////////////////////////////////
//
//  vec4 - 4D vector
//
//////////////////////////////////////////////////////////////////////////////

struct vec4 {

    float  x;
    float  y;
    float  z;
    float  w;

    //
    //  --- Constructors and Destructors ---
    //

    vec4( float s = float(0.0) ) ;

    vec4( float x, float y, float z, float w );

    vec4( const vec4& v ) ;

    vec4( const vec3& v, const float w = 1.0 );

    vec4( const vec2& v, const float z, const float w );
};

//----------------------------------------------------------------------------
//
//  Non-class vec4 Methods
//

float dot( const vec4& u, const vec4& v );

float length( const vec4& v );
vec4 normalize( const vec4& v );

vec3 cross(const vec4& a, const vec4& b );
vec2 Vec2Make(float x, float y);

vec3 Vec3Make(float x, float y, float z);

vec4 Vec4Make(float x, float y, float z, float w);

